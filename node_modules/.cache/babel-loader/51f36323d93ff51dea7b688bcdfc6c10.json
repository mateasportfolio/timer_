{"ast":null,"code":"// src/index.ts\nimport { getActiveElement, getAllFocusable, isTabbable } from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback } from \"react\";\n\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\n\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus();\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\n\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocus = shouldFocus && visible;\n  const onFocus = useCallback(() => {\n    if (!element || !autoFocus) return;\n    if (element.contains(document.activeElement)) return;\n\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n\n        (_a = focusRef.current) == null ? void 0 : _a.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({\n            preventScroll\n          });\n        });\n      }\n    }\n  }, [autoFocus, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\n\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\n\nexport { useFocusOnHide, useFocusOnShow };","map":{"version":3,"names":["getActiveElement","getAllFocusable","isTabbable","useEventListener","useUpdateEffect","useCallback","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","requestAnimationFrame","focus","defaultOptions","preventScroll","useFocusOnShow","target","element","isRefObject","autoFocus","onFocus","document","_a","tabbableEls","length","val"],"sources":["/Users/mateatabak/Documents/timer/node_modules/@chakra-ui/react-use-focus-effect/dist/index.esm.js"],"sourcesContent":["// src/index.ts\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isTabbable\n} from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback } from \"react\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (el.contains(activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus();\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocus = shouldFocus && visible;\n  const onFocus = useCallback(() => {\n    if (!element || !autoFocus)\n      return;\n    if (element.contains(document.activeElement))\n      return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({ preventScroll });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll });\n        });\n      }\n    }\n  }, [autoFocus, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport {\n  useFocusOnHide,\n  useFocusOnShow\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}